/* SCE CONFIDENTIAL
 * PlayStation(R)Suite SDK 0.98.2
 * Copyright (C) 2012 Sony Computer Entertainment Inc.
 * All Rights Reserved.
 */
/*
void main(
          float4 in a_Position  : POSITION,
          float3 in a_Normal    : NORMAL,
          float3 in a_Tangent   : TEXCOORD0,
          float2 in a_TexCoord0  : TEXCOORD1,

          float4 out v_Position            : POSITION,
          float2 out v_TexCoord0           : TEXCOORD0,
          float3 out v_LocalLightDirection : TEXCOORD1,
          uniform float3   LocalLightPosition,
          uniform float4x4 WorldViewProj
          )
{
	v_Position	= mul( a_Position, WorldViewProj );

    // 
    v_LocalLightDirection = LocalLightPosition - a_Position.xyz;

    float3 binormal = cross( a_Normal, a_Tangent );
    float3x3 rotation = float3x3( a_Tangent,
                                  binormal,
                                  a_Normal );

    v_LocalLightDirection = mul( rotation, v_LocalLightDirection );
    v_TexCoord0 = a_TexCoord0;
}
*/
// glslv output by Cg compiler
// cgc version 2.2.0017, build date Jan 29 2010
// command line args: -profile glslv
// source file: input_v.txt
//vendor NVIDIA Corporation
//version 2.2.0.17
//profile glslv
//program main
//semantic main.LocalLightPosition
//semantic main.WorldViewProj
//var float3 LocalLightPosition :  : _LocalLightPosition1 : 7 : 1
//var float4x4 WorldViewProj :  : _WorldViewProj1[0], 4 : 8 : 1
//var float4 a_Position : $vin.POSITION : POSITION : 0 : 1
//var float3 a_Normal : $vin.NORMAL : NORMAL : 1 : 1
//var float3 a_Tangent : $vin.TEXCOORD0 : TEXCOORD0 : 2 : 1
//var float2 a_TexCoord0 : $vin.TEXCOORD1 : TEXCOORD1 : 3 : 1
//var float4 v_Position : $vout.POSITION : POSITION : 4 : 1
//var float2 v_TexCoord0 : $vout.TEXCOORD0 : TEXCOORD0 : 5 : 1
//var float3 v_LocalLightDirection : $vout.TEXCOORD1 : TEXCOORD1 : 6 : 1

attribute vec4 a_Position;
attribute vec3 a_Normal;
attribute vec3 a_Tangent;
attribute vec2 a_TexCoord0;
varying vec4 v_Position;
varying vec2 v_TexCoord0;
varying vec3 v_LocalLightDirection;
uniform vec3 LocalLightPosition;
uniform mat4 WorldViewProj;
vec4 _r0005;
vec3 _r0009;

 // main procedure, the original name was main
void main()
{

    vec4 _v_Position;
    vec2 _v_TexCoord0;
    vec3 _v_LocalLightDirection;
    vec3 _binormal;

    _r0005 = a_Position.x*WorldViewProj[0];
    _r0005 = _r0005 + a_Position.y*WorldViewProj[1];
    _r0005 = _r0005 + a_Position.z*WorldViewProj[2];
    _r0005 = _r0005 + a_Position.w*WorldViewProj[3];
    _v_Position = _r0005;
    _v_LocalLightDirection = LocalLightPosition - a_Position.xyz;
    _binormal = a_Normal.yzx*a_Tangent.zxy - a_Normal.zxy*a_Tangent.yzx;
    _r0009.x = dot(a_Tangent.xyz, _v_LocalLightDirection);
    _r0009.y = dot(_binormal, _v_LocalLightDirection);
    _r0009.z = dot(a_Normal, _v_LocalLightDirection);
    _v_LocalLightDirection = _r0009;
    _v_TexCoord0 = a_TexCoord0.xy;
    v_LocalLightDirection.xyz = _r0009;
    gl_Position = _r0005;
    v_TexCoord0.xy = a_TexCoord0.xy;
} // main end
