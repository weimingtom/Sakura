/*
// SCE_COPYRIGHT

void main(
	float2 in v_TexCoord		: TEXCOORD0,
	float4 in v_Color			: COLOR0,
	float4 out color			: COLOR,
	uniform sampler2D s_Texture	: TEXUNIT0,
    uniform float4 u_ShadowColor,
    uniform float2 u_ShadowOffset

)
{
    float4 shadow_color = tex2D( s_Texture, v_TexCoord - u_ShadowOffset );
    shadow_color.rgb = u_ShadowColor.rgb * shadow_color.a;
    shadow_color.a *= u_ShadowColor.a;

    color = tex2D( s_Texture, v_TexCoord );
    color.rgb = v_Color.rgb * color.a;
    color.a *= v_Color.a;

    shadow_color *= 1.0f - color.a;
    color += shadow_color;
}
*/

//var sampler2D s_Texture : TEXUNIT0 : _s_Texture1 0 : 3 : 1
//var float4 u_ShadowColor :  : _u_ShadowColor1 : 4 : 1
//var float2 u_ShadowOffset :  : _u_ShadowOffset1 : 5 : 1
//var float2 v_TexCoord : $vin.TEXCOORD0 : TEXCOORD0 : 0 : 1
//var float4 v_Color : $vin.COLOR0 : COLOR0 : 1 : 1
//var float4 color : $vout.COLOR : COLOR : 2 : 1

precision highp float;
precision highp int;
varying vec2 v_TexCoord;
varying vec4 v_Color;
uniform sampler2D Texture0;/*s_Texture;*/
uniform vec4 u_ShadowColor;
uniform vec2 u_ShadowOffset;
vec2 _c0004;

 // main procedure, the original name was main
void main()
{

    vec4 _color;
    vec4 _shadow_color;

    _c0004 = v_TexCoord.xy - u_ShadowOffset;
    _shadow_color = texture2D(Texture0/*s_Texture*/, _c0004);
    _shadow_color.xyz = u_ShadowColor.xyz*_shadow_color.w;
    _shadow_color.w = _shadow_color.w*u_ShadowColor.w;
    _color = texture2D(Texture0/*s_Texture*/, v_TexCoord.xy);
    _color.xyz = v_Color.xyz*_color.w;
    _color.w = _color.w*v_Color.w;
    _shadow_color = _shadow_color*vec4(1.00000000E+000 - _color.w, 1.00000000E+000 - _color.w, 1.00000000E+000 - _color.w, 1.00000000E+000 - _color.w);
    _color = _color + _shadow_color;
    gl_FragColor = _color;
} // main end

