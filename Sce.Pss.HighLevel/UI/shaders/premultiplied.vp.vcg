/*
// SCE_COPYRIGHT

void main(
	float4 in a_Position		: POSITION,
	float4 in a_Color			: COLOR0,
	float2 in a_TexCoord		: TEXCOORD0,
	float4 out position			: POSITION,
	float4 out v_Color			: COLOR0,
	float2 out v_TexCoord		: TEXCOORD0,
	uniform float4x4 u_WorldMatrix,
	uniform float u_Alpha
)
{
	//gl_Position = u_WorldMatrix * a_Position;
	position = mul(a_Position, u_WorldMatrix);
	v_TexCoord = a_TexCoord;

	v_Color = a_Color * u_Alpha;
}
*/

//var float4x4 u_WorldMatrix :  : _u_WorldMatrix1[0], 4 : 6 : 1
//var float u_Alpha :  : _u_Alpha1 : 7 : 1
//var float4 a_Position : $vin.POSITION : POSITION : 0 : 1
//var float4 a_Color : $vin.COLOR0 : COLOR0 : 1 : 1
//var float2 a_TexCoord : $vin.TEXCOORD0 : TEXCOORD0 : 2 : 1
//var float4 position : $vout.POSITION : POSITION : 3 : 1
//var float4 v_Color : $vout.COLOR0 : COLOR0 : 4 : 1
//var float2 v_TexCoord : $vout.TEXCOORD0 : TEXCOORD0 : 5 : 1

attribute vec4 a_Position;
attribute vec4 a_Color;
attribute vec2 a_TexCoord;
varying vec4 position;
varying vec4 v_Color;
varying vec2 v_TexCoord;
uniform mat4 u_WorldMatrix;
uniform float u_Alpha;
vec4 _r0003;

 // main procedure, the original name was main
void main()
{

    vec4 _position;
    vec4 _v_Color;
    vec2 _v_TexCoord;

    _r0003 = a_Position.x*u_WorldMatrix[0];
    _r0003 = _r0003 + a_Position.y*u_WorldMatrix[1];
    _r0003 = _r0003 + a_Position.z*u_WorldMatrix[2];
    _r0003 = _r0003 + a_Position.w*u_WorldMatrix[3];
    _position = _r0003;
    _v_TexCoord = a_TexCoord.xy;
    _v_Color = a_Color*u_Alpha;
    v_Color = _v_Color;
    gl_Position = _r0003;
    v_TexCoord.xy = a_TexCoord.xy;
} // main end

